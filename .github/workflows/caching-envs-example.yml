name: "Caching Env Example"

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "master"
  schedule:
    # Note that cronjobs run on master/main by default
    - cron: "0 0 * * *"

jobs:
  caching-example:
    name: Caching-Env

    # prevent cronjobs from running on forks
    if:
      (github.event_name == 'schedule' && github.repository ==
      'conda-incubator/setup-miniconda') || (github.event_name != 'schedule')

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: anaconda-client-env
            use-mamba: true

      - name: Set Conda cache env vars
        shell: bash
        run: |
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "CONDA_PREFIX=$(mamba info --base)" >> $GITHUB_ENV
      - name: Cache Conda env
        uses: actions/cache@v2
        with:
          path: ${{ env.CONDA_PREFIX }}
          key: ${{ env.RUNNER_OS }}-conda-${{ hashFiles('etc/example-environment-caching.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        id: cache

      - name: Update environment
        run: mamba env update -n anaconda-client-env -f etc/example-environment-caching.yml
        if: steps.cache.outputs.cache-hit != 'true'
